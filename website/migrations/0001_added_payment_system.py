# Generated by Django 2.2.10 on 2020-04-21 07:53

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the plan', max_length=60)),
                ('illustration_static_address', models.CharField(blank=True, help_text='The static address to to the ilustration in use. e.g."images/small-business-plan.svg"', max_length=255, null=True)),
                ('description', models.CharField(help_text='A short description of the plan', max_length=255)),
                ('monthly_price', models.DecimalField(decimal_places=2, help_text='Montly price', max_digits=10)),
                ('yearly_price', models.DecimalField(decimal_places=2, help_text='Yearly price', max_digits=10)),
                ('show_price', models.BooleanField(default=True, help_text='Should the price be displayed?')),
                ('included_employees', models.PositiveSmallIntegerField(default=10, help_text='The number of employees that are included', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2000000)])),
                ('can_be_picked', models.BooleanField(default=True, help_text='This plan should be available to pick for visitors')),
                ('can_be_viewed', models.BooleanField(default=True, help_text='This plan should be visible to visitors')),
                ('is_paid', models.CharField(choices=[('n', 'No'), ('y', 'Yes')], default='n', help_text='Is the plan a paid plan?', max_length=1)),
                ('stripe_monthly_plan_id', models.CharField(blank=True, default=None, help_text='This Plans monthly plan-object ID in Stripe API, format should be "plan_H7nTHThryy8L62".', max_length=255, null=True)),
                ('stripe_quarterly_plan_id', models.CharField(blank=True, default=None, help_text='This Plans quarterly plan-object ID in Stripe API, format should be "plan_H7nTHThryy8L62".', max_length=255, null=True)),
                ('stripe_yearly_plan_id', models.CharField(blank=True, default=None, help_text='This Plans yearly plan-object ID in Stripe API, format should be "plan_H7nTHThryy8L62".', max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SalesArgument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('argument', models.CharField(help_text='What is the argument?', max_length=255)),
                ('priority', models.PositiveSmallIntegerField(default=0, help_text='Set a priority (0-100):', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('badge_type', models.CharField(blank=True, choices=[('No set', None), ('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Success'), ('danger', 'Danger'), ('warning', 'Warning'), ('info', 'Info'), ('light', 'Light'), ('dark', 'Dark')], default=None, help_text='Should a badge accompany the argument?', max_length=30)),
                ('badge_text', models.CharField(blank=True, default=None, help_text='What should the badge (if any) say?', max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Is this argument active (supposed to be visible)?')),
            ],
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_current_plan_expires', models.DateField(blank=True, help_text='The date the current strupe subscription ends', null=True)),
                ('status', models.CharField(blank=True, default=None, help_text='The subscrition status of the Subscriber', max_length=35, null=True)),
                ('date_last_synced_with_stripe', models.DateField(blank=True, help_text='The date this object was synced with Stripe', null=True)),
                ('flagged_interest_in_plan', models.CharField(blank=True, help_text='Subscriber is interested in this plan', max_length=60, null=True)),
                ('stripe_id', models.CharField(blank=True, default=None, help_text='Subscribers Customer object ID in Stripe API', max_length=255, null=True)),
                ('stripe_subscription_id', models.CharField(blank=True, default=None, help_text='Subscribers Subscription object ID in Stripe API', max_length=255, null=True)),
                ('plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='website.Plan')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='plan',
            name='sales_argument',
            field=models.ManyToManyField(blank=True, help_text='Select sales arguments for this plan', to='website.SalesArgument'),
        ),
    ]
