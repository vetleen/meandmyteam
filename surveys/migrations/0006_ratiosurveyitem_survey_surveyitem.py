# Generated by Django 2.2.10 on 2020-06-14 07:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('website', '0006_organization_stripe_subscription_quantity'),
        ('surveys', '0005_respondent'),
    ]

    operations = [
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_open', models.DateField(help_text='The date from which this Survey may be answered')),
                ('date_close', models.DateField(help_text='The date until which this Survey may be answered')),
                ('owner', models.ForeignKey(help_text='Organization that owns this survey', null=True, on_delete=django.db.models.deletion.SET_NULL, to='website.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='SurveyItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('formulation', models.CharField(help_text='A question or statement to confront Respondents with', max_length=255)),
                ('instruction_string', models.CharField(help_text='Instruction of how to score item', max_length=255)),
                ('n_invited', models.IntegerField(default=0, help_text='Number of respondents')),
                ('n_answered', models.IntegerField(default=0, help_text='Number of respondents')),
                ('survey', models.ForeignKey(help_text='Organization that owns this survey', null=True, on_delete=django.db.models.deletion.PROTECT, to='surveys.Survey')),
            ],
        ),
        migrations.CreateModel(
            name='RatioSurveyItem',
            fields=[
                ('surveyitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='surveys.SurveyItem')),
                ('normalized_end_score_numeric', models.FloatField(blank=True, default=None, help_text='All individual scores added, then  divided by n_answered', null=True)),
                ('min_score_numeric', models.SmallIntegerField(blank=True, default=None, help_text='The lowest allowed score for this SurveyItem', null=True)),
                ('max_score_numeric', models.SmallIntegerField(blank=True, default=None, help_text='The higest allowed score for this SurveyItem', null=True)),
            ],
            bases=('surveys.surveyitem',),
        ),
    ]
