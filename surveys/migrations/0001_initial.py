# Generated by Django 2.2.10 on 2020-05-07 19:09

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='Email of employee', max_length=254)),
                ('first_name', models.CharField(blank=True, help_text='First name of Employee', max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, help_text='Last name of Employee', max_length=255, null=True)),
                ('receives_surveys', models.BooleanField(default=True, help_text='This Employee should receive surveys from the Organization')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Name of the Organization', max_length=255, null=True)),
                ('address_line_1', models.CharField(blank=True, help_text='Adress of the Organization', max_length=255, null=True)),
                ('address_line_2', models.CharField(blank=True, help_text='Address contd.', max_length=255, null=True)),
                ('zip_code', models.CharField(blank=True, help_text='Zip code of the Organization', max_length=255, null=True)),
                ('city', models.CharField(blank=True, help_text='City where the Organization is located', max_length=255, null=True)),
                ('country', models.CharField(blank=True, help_text='Country where the Organization is located', max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the Product', max_length=255)),
                ('short_description', models.CharField(blank=True, help_text='Short description of Product', max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, help_text='Question is included in new Surveys')),
                ('question_string', models.TextField(help_text='The question as it appears to the respondent')),
                ('instruction_string', models.CharField(blank=True, default=None, help_text='Short text instructing how to answer the question', max_length=255, null=True)),
                ('dimension', models.CharField(blank=True, default=None, help_text='The dimension or category for this Question', max_length=250, null=True)),
                ('product', models.ForeignKey(help_text='Product that asks this question', on_delete=django.db.models.deletion.CASCADE, to='surveys.Product')),
            ],
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_open', models.DateField(help_text='The date from which this Survey may be answered')),
                ('date_close', models.DateField(help_text='The date until which this Survey may be answered')),
                ('owner', models.ForeignKey(help_text='Organization that owns this survey', on_delete=django.db.models.deletion.CASCADE, to='surveys.Organization')),
                ('product', models.ForeignKey(help_text='Questions asked in this survey', on_delete=django.db.models.deletion.PROTECT, to='surveys.Product')),
            ],
        ),
        migrations.CreateModel(
            name='SurveyInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent_initial', models.BooleanField(default=False, help_text='This SI has been sent once, the initial time')),
                ('last_reminder', models.DateField(blank=True, help_text='Last reminder was sent', null=True)),
                ('completed', models.BooleanField(default=False, help_text='This SI has been completed')),
                ('respondent', models.ForeignKey(blank=True, help_text='Employee who answered this SurveyInstance', null=True, on_delete=django.db.models.deletion.SET_NULL, to='surveys.Employee')),
                ('survey', models.ForeignKey(help_text='Survey that this instance is an instance of', on_delete=django.db.models.deletion.PROTECT, to='surveys.Survey')),
            ],
        ),
        migrations.CreateModel(
            name='TextAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(help_text='The answer to the question (string of text)')),
                ('question', models.ForeignKey(help_text='The Question this Answer answers', on_delete=django.db.models.deletion.PROTECT, to='surveys.Question')),
                ('survey_instance', models.ForeignKey(help_text='The SurveyInstance where this answer given', on_delete=django.db.models.deletion.PROTECT, to='surveys.SurveyInstance')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='This product is active for this organization')),
                ('survey_interval', models.SmallIntegerField(default=90, help_text='How many days between each survey', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(730)])),
                ('last_survey_open', models.DateField(blank=True, help_text='Last opening date of survey with this product/prganization combo', null=True)),
                ('last_survey_close', models.DateField(blank=True, help_text='Last closing date of survey with this product/prganization combo', null=True)),
                ('surveys_remain_open_days', models.SmallIntegerField(default=21, help_text='How many days should surveys be open for this organization', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(365)])),
                ('organization', models.ForeignKey(help_text='Organization this setting applies to', on_delete=django.db.models.deletion.CASCADE, to='surveys.Organization')),
                ('product', models.ForeignKey(help_text='Product this setting applies to', on_delete=django.db.models.deletion.CASCADE, to='surveys.Product')),
            ],
        ),
        migrations.AddField(
            model_name='organization',
            name='active_products',
            field=models.ManyToManyField(blank=True, help_text='Products this organization is currently using', to='surveys.Product'),
        ),
        migrations.AddField(
            model_name='organization',
            name='owner',
            field=models.OneToOneField(blank=True, help_text='User who owns this Organization', null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='IntAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(help_text='The answer to the question (Integer)')),
                ('question', models.ForeignKey(help_text='The Question this Answer answers', on_delete=django.db.models.deletion.PROTECT, to='surveys.Question')),
                ('survey_instance', models.ForeignKey(help_text='The SurveyInstance where this answer given', on_delete=django.db.models.deletion.PROTECT, to='surveys.SurveyInstance')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='organization',
            field=models.ForeignKey(help_text='Organization where this Employee is employed', on_delete=django.db.models.deletion.PROTECT, to='surveys.Organization'),
        ),
    ]
