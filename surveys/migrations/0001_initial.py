# Generated by Django 2.2.13 on 2020-08-15 08:31

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('website', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dimension',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('name_en_us', models.CharField(max_length=255, null=True)),
                ('name_nb', models.CharField(max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('description_en_us', models.TextField(blank=True, null=True)),
                ('description_nb', models.TextField(blank=True, null=True)),
                ('object_id', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('content_type', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='DimensionResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('n_completed', models.IntegerField(default=0)),
                ('dimension', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='surveys.Dimension')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_surveys.dimensionresult_set+', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('name_en_us', models.CharField(max_length=255, null=True, unique=True)),
                ('name_nb', models.CharField(max_length=255, null=True, unique=True)),
                ('slug_name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('slug_name_en_us', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('slug_name_nb', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('description_en_us', models.CharField(blank=True, max_length=255, null=True)),
                ('description_nb', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Respondent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, help_text='First name of Employee', max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, help_text='Last name of Respondent', max_length=255, null=True)),
                ('email', models.EmailField(help_text='Email of Respondent', max_length=254)),
                ('receives_surveys', models.BooleanField(default=True, help_text='This Respondent should receive surveys from the Organization')),
                ('organization', models.ForeignKey(help_text='Organization where this Respondent is employed', on_delete=django.db.models.deletion.CASCADE, to='website.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='Scale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('instruction', models.CharField(blank=True, max_length=255, null=True)),
                ('instruction_en_us', models.CharField(blank=True, max_length=255, null=True)),
                ('instruction_nb', models.CharField(blank=True, max_length=255, null=True)),
                ('opt_out', models.BooleanField(default=True)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_surveys.scale_set+', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_open', models.DateField(help_text='The date from which this Survey may be answered')),
                ('date_close', models.DateField(help_text='The date until which this Survey may be answered')),
                ('n_invited', models.IntegerField(default=0, help_text='Number of respondents')),
                ('n_completed', models.IntegerField(default=0)),
                ('n_incomplete', models.IntegerField(default=0)),
                ('n_not_started', models.IntegerField(default=0)),
                ('is_closed', models.BooleanField(default=False, help_text='This survey is finished forever')),
                ('owner', models.ForeignKey(help_text='Organization that owns this survey', null=True, on_delete=django.db.models.deletion.SET_NULL, to='website.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='SurveyInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consent_was_given', models.BooleanField(default=False)),
                ('completed', models.BooleanField(default=False)),
                ('started', models.BooleanField(default=False)),
                ('respondent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='surveys.Respondent')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='surveys.Survey')),
            ],
        ),
        migrations.CreateModel(
            name='SurveyInstanceItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answered', models.BooleanField(default=False)),
                ('chose_to_not_answer', models.BooleanField(default=False)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_surveys.surveyinstanceitem_set+', to='contenttypes.ContentType')),
                ('survey_instance', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='surveys.SurveyInstance')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='SurveyItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_formulation', models.TextField(blank=True, help_text='A question or statement to confront Respondents with', null=True)),
                ('item_formulation_en_us', models.TextField(blank=True, help_text='A question or statement to confront Respondents with', null=True)),
                ('item_formulation_nb', models.TextField(blank=True, help_text='A question or statement to confront Respondents with', null=True)),
                ('item_inverted', models.BooleanField(default=False)),
                ('n_answered', models.IntegerField(default=0, help_text='Number of respondents')),
                ('item_dimension', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='surveys.Dimension')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_surveys.surveyitem_set+', to='contenttypes.ContentType')),
                ('survey', models.ForeignKey(help_text='Organization that owns this survey', null=True, on_delete=django.db.models.deletion.PROTECT, to='surveys.Survey')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='RatioScale',
            fields=[
                ('scale_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='surveys.Scale')),
                ('min_value', models.SmallIntegerField(default=0)),
                ('max_value', models.SmallIntegerField(default=0)),
                ('min_value_description', models.CharField(blank=True, max_length=255, null=True)),
                ('min_value_description_en_us', models.CharField(blank=True, max_length=255, null=True)),
                ('min_value_description_nb', models.CharField(blank=True, max_length=255, null=True)),
                ('max_value_description', models.CharField(blank=True, max_length=255, null=True)),
                ('max_value_description_en_us', models.CharField(blank=True, max_length=255, null=True)),
                ('max_value_description_nb', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('surveys.scale',),
        ),
        migrations.CreateModel(
            name='RatioScaleDimensionResult',
            fields=[
                ('dimensionresult_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='surveys.DimensionResult')),
                ('average', models.FloatField(blank=True, default=None, help_text='Average of scores for this dimension in this survey', null=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('surveys.dimensionresult',),
        ),
        migrations.CreateModel(
            name='RatioSurveyItem',
            fields=[
                ('surveyitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='surveys.SurveyItem')),
                ('average', models.FloatField(blank=True, default=None, help_text='Average of scores for this item in this survey', null=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('surveys.surveyitem',),
        ),
        migrations.CreateModel(
            name='SurveySetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False, help_text='This instrument is active for this organization')),
                ('survey_interval', models.SmallIntegerField(default=90, help_text='How many days between each survey', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(730)])),
                ('surveys_remain_open_days', models.SmallIntegerField(default=7, help_text='How many days should surveys be open for this organization', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(365)])),
                ('last_survey_open', models.DateField(blank=True, help_text='Last opening date of survey with this product/prganization combo', null=True)),
                ('last_survey_close', models.DateField(blank=True, help_text='Last closing date of survey with this product/prganization combo', null=True)),
                ('instrument', models.ForeignKey(help_text='Instruments this organization is using', on_delete=django.db.models.deletion.CASCADE, to='surveys.Instrument')),
                ('organization', models.ForeignKey(help_text='Organization this setting applies to', on_delete=django.db.models.deletion.CASCADE, to='website.Organization')),
                ('surveys', models.ManyToManyField(blank=True, to='surveys.Survey')),
            ],
        ),
        migrations.CreateModel(
            name='RespondentEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_date', models.DateField(blank=True, null=True)),
                ('category', models.CharField(max_length=255)),
                ('error_message', models.CharField(blank=True, max_length=255, null=True)),
                ('survey_instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='surveys.SurveyInstance')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('formulation', models.TextField()),
                ('formulation_en_us', models.TextField(null=True)),
                ('formulation_nb', models.TextField(null=True)),
                ('active', models.BooleanField(default=True)),
                ('inverted', models.BooleanField(default=False)),
                ('dimension', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='surveys.Dimension')),
            ],
        ),
        migrations.AddField(
            model_name='dimensionresult',
            name='survey',
            field=models.ForeignKey(help_text='Organization that owns this survey', null=True, on_delete=django.db.models.deletion.PROTECT, to='surveys.Survey'),
        ),
        migrations.AddField(
            model_name='dimension',
            name='instrument',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='surveys.Instrument'),
        ),
        migrations.CreateModel(
            name='RatioSurveyInstanceItem',
            fields=[
                ('surveyinstanceitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='surveys.SurveyInstanceItem')),
                ('answer', models.SmallIntegerField(blank=True, default=None, null=True)),
                ('survey_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='surveys.RatioSurveyItem')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('surveys.surveyinstanceitem',),
        ),
    ]
